% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LearnerMultioutputKerasCNN.R,
%   R/LearnerMultioutputKerasCNNWordError.R
\name{KerasArchitectureCNN}
\alias{KerasArchitectureCNN}
\alias{KerasArchitectureCNNWordError}
\title{Keras Neural Network Feed Forward architecture}
\description{
Keras Neural Network Feed Forward architecture

Keras Neural Network Feed Forward architecture

Special Keras Neural Network CNN architecture for writing error detection

Special Keras Neural Network CNN architecture for writing error detection
}
\concept{KerasArchitectures}
\section{Super class}{
\code{\link[mlr3keras:KerasArchitecture]{mlr3keras::KerasArchitecture}} -> \code{KerasArchitectureCNN}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{KerasArchitectureCNN$new()}}
\item \href{#method-clone}{\code{KerasArchitectureCNN$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="get_model">}\href{../../mlr3keras/html/KerasArchitecture.html#method-get_model}{\code{mlr3keras::KerasArchitecture$get_model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="set_transform">}\href{../../mlr3keras/html/KerasArchitecture.html#method-set_transform}{\code{mlr3keras::KerasArchitecture$set_transform()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="x_transform">}\href{../../mlr3keras/html/KerasArchitecture.html#method-x_transform}{\code{mlr3keras::KerasArchitecture$x_transform()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="y_transform">}\href{../../mlr3keras/html/KerasArchitecture.html#method-y_transform}{\code{mlr3keras::KerasArchitecture$y_transform()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KerasArchitectureCNN$new(build_arch_fn, param_set)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KerasArchitectureCNN$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[mlr3keras:KerasArchitecture]{mlr3keras::KerasArchitecture}} -> \code{KerasArchitectureCNN}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{KerasArchitectureCNNWordError$new()}}
\item \href{#method-clone}{\code{KerasArchitectureCNNWordError$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="get_model">}\href{../../mlr3keras/html/KerasArchitecture.html#method-get_model}{\code{mlr3keras::KerasArchitecture$get_model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="set_transform">}\href{../../mlr3keras/html/KerasArchitecture.html#method-set_transform}{\code{mlr3keras::KerasArchitecture$set_transform()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="x_transform">}\href{../../mlr3keras/html/KerasArchitecture.html#method-x_transform}{\code{mlr3keras::KerasArchitecture$x_transform()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3keras" data-topic="KerasArchitecture" data-id="y_transform">}\href{../../mlr3keras/html/KerasArchitecture.html#method-y_transform}{\code{mlr3keras::KerasArchitecture$y_transform()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KerasArchitectureCNNWordError$new(build_arch_fn, param_set)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KerasArchitectureCNNWordError$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
