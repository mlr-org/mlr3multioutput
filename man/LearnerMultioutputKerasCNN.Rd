% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LearnerMultioutputKerasCNN.R
\name{LearnerMultioutputKerasCNN}
\alias{LearnerMultioutputKerasCNN}
\alias{mlr_learners_multioutput.kerascnn}
\title{Keras Convolutionary Neural Network for Classification}
\format{
\code{\link[R6:R6Class]{R6::R6Class()}} inheriting from \link{LearnerMultioutputKeras}.
}
\description{
Keras Convolutionary Neural Network for Classification

Keras Convolutionary Neural Network for Classification
}
\section{Construction}{
\preformatted{LearnerMultioutputKerasCNN$new()
mlr3::mlr_learners$get("multioutput.kerascnn")
mlr3::lrn("multioutput.kerascnn")
}
}

\section{Learner Methods}{


Keras Learners offer several methods for easy access to the
stored models.
\itemize{
\item \code{.$plot()}\cr
Plots the history, i.e. the train-validation loss during training.
\item \code{.$save(file_path)}\cr
Dumps the model to a provided file_path in 'h5' format.
\item \code{.$load_model_from_file(file_path)}\cr
Loads a model saved using \code{saved} back into the learner.
The model needs to be saved separately when the learner is serialized.
In this case, the learner can be restored from this function.
Currently not implemented for 'TabNet'.
\item \code{.$lr_find(task, epochs, lr_min, lr_max, batch_size)}\cr
Employ an implementation of the learning rate finder as popularized by
Jeremy Howard in fast.ai (http://course.fast.ai/) for the learner.
For more info on parameters, see \code{find_lr}.
}
}

\examples{
learner = mlr3::lrn("multioutput.kerascnn")
print(learner)

# available parameters:
learner$param_set$ids()
}
\seealso{
\link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3multioutput:LearnerMultioutput]{mlr3multioutput::LearnerMultioutput}} -> \code{\link[mlr3multioutput:LearnerMultioutputKeras]{mlr3multioutput::LearnerMultioutputKeras}} -> \code{LearnerMultioutputKerasCNN}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{LearnerMultioutputKerasCNN$new()}}
\item \href{#method-clone}{\code{LearnerMultioutputKerasCNN$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner">}\href{../../mlr3/html/Learner.html#method-base_learner}{\code{mlr3::Learner$base_learner()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format">}\href{../../mlr3/html/Learner.html#method-format}{\code{mlr3::Learner$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help">}\href{../../mlr3/html/Learner.html#method-help}{\code{mlr3::Learner$help()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict">}\href{../../mlr3/html/Learner.html#method-predict}{\code{mlr3::Learner$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata">}\href{../../mlr3/html/Learner.html#method-predict_newdata}{\code{mlr3::Learner$predict_newdata()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print">}\href{../../mlr3/html/Learner.html#method-print}{\code{mlr3::Learner$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset">}\href{../../mlr3/html/Learner.html#method-reset}{\code{mlr3::Learner$reset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train">}\href{../../mlr3/html/Learner.html#method-train}{\code{mlr3::Learner$train()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3multioutput" data-topic="LearnerMultioutputKeras" data-id="load_model_from_file">}\href{../../mlr3multioutput/html/LearnerMultioutputKeras.html#method-load_model_from_file}{\code{mlr3multioutput::LearnerMultioutputKeras$load_model_from_file()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3multioutput" data-topic="LearnerMultioutputKeras" data-id="lr_find">}\href{../../mlr3multioutput/html/LearnerMultioutputKeras.html#method-lr_find}{\code{mlr3multioutput::LearnerMultioutputKeras$lr_find()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3multioutput" data-topic="LearnerMultioutputKeras" data-id="plot">}\href{../../mlr3multioutput/html/LearnerMultioutputKeras.html#method-plot}{\code{mlr3multioutput::LearnerMultioutputKeras$plot()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3multioutput" data-topic="LearnerMultioutputKeras" data-id="save">}\href{../../mlr3multioutput/html/LearnerMultioutputKeras.html#method-save}{\code{mlr3multioutput::LearnerMultioutputKeras$save()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerMultioutputKerasCNN$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerMultioutputKerasCNN$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
