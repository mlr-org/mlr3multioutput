% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOps.R
\name{mlr_pipeops_multioutputunite}
\alias{mlr_pipeops_multioutputunite}
\alias{PipeOpPredictionMultioutputUnite}
\title{PipeOpPredictionMultioutputUnite}
\format{
\code{\link{R6Class}} inheriting from \code{\link{PipeOpEnsemble}}/\code{\link{PipeOp}}.
}
\description{
Unite a set of "classif", "regr"' \code{\link[mlr3:Prediction]{Predictions}} into a
\code{\link{PredictionMultioutput}}.
This \code{\link{PipeOp}} uses a \code{\link{Multiplicity}} input, which is created by \code{\link{PipeOpMultiplicityImply}}
or other \code{\link{PipeOp}}s that implicate a \code{\link{Multiplicity}}.

Note that \code{\link{Multiplicity}} is currently an experimental feature and the implementation or UI
may change.
}
\section{Input and Output Channels}{

Input and output channels are inherited from \code{\link{PipeOpEnsemble}}. Instead of a
\code{\link{PipeOpEnsemble}}'s \code{collect} parameter is initialized
with \code{TRUE} to allow for collecting a \code{\link{Multiplicity}} input.
}

\section{State}{

The \verb{$state} is left empty (\code{list()}).
}

\section{Parameters}{

The parameters are the parameters inherited from the \code{\link{PipeOpEnsemble}}.
}

\section{Internals}{

Inherits from \code{\link{PipeOpEnsemble}} by implementing the \code{private$.predict()} method.

Should be used in combination with \code{\link{PipeOpSplitMultiOutput}}.
}

\section{Fields}{

Only fields inherited from \code{\link{PipeOpEnsemble}}/\code{\link{PipeOp}}.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOpEnsemble}}/\code{\link{PipeOp}}.
}

\seealso{
Other PipeOps: 
\code{\link{mlr_pipeops_multioutputlrn}},
\code{\link{mlr_pipeops_multioutputsplit}}

Other Multiplicity PipeOps: 
\code{\link{mlr_pipeops_multioutputlrn}},
\code{\link{mlr_pipeops_multioutputsplit}}

Other Experimental Features: 
\code{\link{mlr_pipeops_multioutputlrn}},
\code{\link{mlr_pipeops_multioutputsplit}}
}
\concept{Ensembles}
\concept{Experimental Features}
\concept{Multiplicity PipeOps}
\concept{PipeOps}
\section{Super classes}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{\link[mlr3pipelines:PipeOpEnsemble]{mlr3pipelines::PipeOpEnsemble}} -> \code{PipeOpPredictionMultioutputUnite}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PipeOpPredictionMultioutputUnite$new()}}
\item \href{#method-clone}{\code{PipeOpPredictionMultioutputUnite$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict">}\href{../../mlr3pipelines/html/PipeOp.html#method-predict}{\code{mlr3pipelines::PipeOp$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print">}\href{../../mlr3pipelines/html/PipeOp.html#method-print}{\code{mlr3pipelines::PipeOp$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train">}\href{../../mlr3pipelines/html/PipeOp.html#method-train}{\code{mlr3pipelines::PipeOp$train()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new R6 class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpPredictionMultioutputUnite$new(
  id = "multioutputunite",
  param_vals = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{\code{character(1)}\cr
Identifier of the resulting  object, defaults to "multioutputunite".}

\item{\code{param_vals}}{named \code{list}\cr
List of hyperparameter settings, overwriting the hyperparameter settings that would
otherwise be set during construction. Default \code{list()}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpPredictionMultioutputUnite$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
